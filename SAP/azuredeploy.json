{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "NsgName": {
            "type": "string",
            "defaultValue": "kubeadmNsg",
            "metadata": {
                "description": "The name of the Network Security Group"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "kubeadmVnet",
            "metadata": {
                "description": "VNet Name"
            }
        },
        "vnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Address Prefix"
            }
        },
        "mastersubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "Subnet Prefix"
            }
        },
        "workersubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "Subnet Prefix"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "kubeadmVmMaster",
            "metadata": {
                "description": "VM Name"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "kubeadm",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "SSHKeys": {
            "type": "string",
            "metadata": {
                "description": "SSH rsa public key file as a string."
            },
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQICtzDUIxW4EyBg/lDHMIlubvqof0MofSDXWlAz7ile2oTzliASa7P+PR+TS+TcACTcxW7MbCnGIBVYB3FaI9tHMelZH63bQ0vqprYOQcBEi3D+g1HRN+oXW/joxfKL44ru8TWgsO0zYx7YmJguCj7taTzPWfurAZkHmyxLATE3DSBQmKZslmfwB15YaWigsIVyDZ4hwUjwXLA7oxz1v5k3S6LfINqvElOgK08eeQhRhA4230ixauDxrSakvJIq3LfjwrfGX4uvb/H5/pExZgYZMDx8JHN2hiEjiEIHc8aMTwTN3JSrQ5XGRCut4tjE3XUiRE02Di5qbH3UegP1nz"
        },
        "userScript": {
            "type": "string",
            "metadata": {
                "description": "Type in the bash script to run via cloud-init"
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "dnsNameForPublicIP": "[concat('kubeadm', uniquestring(resourceGroup().id))]",
        "publicIPAddressName": "PublicIP",
        "publicIPAddressType": "Dynamic",
        "nicName": "WebVMNic",
        "vmSize": "Standard_D2s_v3",
        "imageReference": {
            "publisher": "Canonical",
            "imageOffer": "UbuntuServer",
            "sku": "16.04-LTS"
        }
    },
    "resources": [
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('NsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh_rule",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "web_rule",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "6443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-01-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('NsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "master",
                        "properties": {
                            "addressPrefix": "[parameters('mastersubnetPrefix')]"
                        }
                    },
                    {
                        "name": "worker",
                        "properties": {
                            "addressPrefix": "[parameters('workersubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('NsgName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "primary": true,
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName')),'/subnets/master')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('NsgName'))]"
                }
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "publicIP1": "[concat(variables('dnsNameForPublicIP'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[parameters('userScript')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('SSHKeys')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imageReference').publisher]",
                        "offer": "[variables('imageReference').imageOffer]",
                        "sku": "[variables('imageReference').sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "kubeadm": {
            "type": "string",
            "value": "[concat('http://', reference(concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName')), '2016-03-30').dnsSettings.fqdn)]"
        },
        "sshCommand": {
            "type": "string",
            "value": "[concat('ssh -i ./id_rsa ', parameters('adminUsername'), '@', reference(concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName')), '2016-03-30').dnsSettings.fqdn)]"
        }
    }
}